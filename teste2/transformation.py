import os
import pdfplumber
import pandas as pd
from zipfile import ZipFile

# Caminho do PDF baixado no teste 1
pdf_file = os.path.join("..", "web-scrapping", "anexos", "Anexo_I_Rol_2021RN_465.2021_RN627L.2024.pdf")
csv_file = "Teste_Ricardo_Lins.csv"  # Nome do arquivo CSV
zip_file = "Teste_Ricardo_Lins.zip"  # Nome do ZIP

# Dicion치rio de substitui칞칚o das abrevia칞칫es OD e AMB
substituicoes = {
    "OD": "Seg. Odontol칩gica",
    "AMB": "Seg. Ambulatorial"
}

# Lista para armazenar os dados extra칤dos
dados_extraidos = []

# Abre o PDF e extrai as tabelas de todas as p치ginas
with pdfplumber.open(pdf_file) as pdf:
    for page in pdf.pages:
        table = page.extract_table()
        if table:
            for row in table:
                if any(row):  # Verifica se a linha n칚o est치 vazia
                    dados_extraidos.append([cell.strip() if cell else "" for cell in row])  # Remove espa칞os extras

# Verifica se h치 dados extra칤dos
if dados_extraidos:
    # Convertendo os dados extra칤dos em um DataFrame
    df = pd.DataFrame(dados_extraidos)

    # 游댳 **Corre칞칚o do cabe칞alho**
    df.columns = df.iloc[0].astype(str).str.replace(r'\n', ' ', regex=True).str.strip()  # Remove quebras de linha e espa칞os extras
    df = df[1:].reset_index(drop=True)  # Remove a linha duplicada do cabe칞alho

    # 游댳 **Aplicar substitui칞칚o nas colunas e no conte칰do**
    df.columns = [substituicoes.get(col.strip(), col.strip()) for col in df.columns]  # Substituir OD e AMB no cabe칞alho
    df.replace(substituicoes, inplace=True)  # Substituir OD e AMB no conte칰do

    # Salvar o DataFrame como CSV
    df.to_csv(csv_file, index=False, encoding="utf-8")

    # Compactar o CSV em um arquivo ZIP
    with ZipFile(zip_file, "w") as zipf:
        zipf.write(csv_file)

    print(f"Arquivo ZIP criado: {zip_file}")
else:
    print("Nenhuma tabela encontrada no PDF. Verifique o arquivo.")
